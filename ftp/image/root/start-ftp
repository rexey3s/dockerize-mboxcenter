#!/bin/bash

if [ -z $HOST ] ; then
    echo
    echo "ERROR: you MUST specify a host name or an IP, which will be used as the target for PASV command"
    echo
    exit 1
fi

RESOLVE_HOSTNAME=YES

# if HOST is a dotted quad, then it shouldn't be resolved with DNS
if [[ $HOST =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+ ]] ; then
    RESOLVE_HOSTNAME=NO
fi

mkdir -m 0700 -p /var/empty
mkdir -m 0755 -p /var/run

existing=$(grep $FTP_USER /etc/passwd | cut -f 1 -d :)

mkdir -m 0755 -p /data
chown root:root /data

if [ "$existing" = "$FTP_USER" ] ; then
    usermod -d /data/$FTP_USER -s /bin/false -g ftp -p $(openssl passwd $FTP_PASS) $FTP_USER
else
    useradd -d /data/$FTP_USER -s /bin/false -g ftp -p $(openssl passwd $FTP_PASS) $FTP_USER
fi

mkdir -p /data/$FTP_USER/incoming
chown -R $FTP_USER:ftp /data/$FTP_USER

cat <<EOF> /etc/vsftpd.conf

background=NO
listen=YES
anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=022
check_shell=NO
session_support=NO
chroot_local_user=YES
allow_writeable_chroot=yes

pasv_address=$HOST
pasv_addr_resolve=$RESOLVE_HOSTNAME

pasv_min_port=$PASV_MIN_PORT
pasv_max_port=$PASV_MAX_PORT
pasv_enable=YES
pasv_promiscuous=NO

port_enable=YES
port_promiscuous=NO

seccomp_sandbox=NO

log_ftp_protocol=YES
EOF

/etc/init.d/vsftpd start
